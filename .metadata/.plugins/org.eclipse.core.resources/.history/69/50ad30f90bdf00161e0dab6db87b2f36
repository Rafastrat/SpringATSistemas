package com.cursospring;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.model;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.net.URI;
import java.net.URISyntaxException;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(classes = ConfiguracionMvc.class)
public class PruebaControlador {

	private MockMvc mockMvc;

	@Autowired
	private Controlador sut;

	@Before
	public void initMockMvc() {
		mockMvc = MockMvcBuilders.standaloneSetup(sut).build();
	}

	@Test
	public void pruebaControlador() throws URISyntaxException, Exception {
		mockMvc.perform(get(new URI("/")).param("dato", "pepe"))
			.andExpect(status().isOk()).andExpect(model().attributeExists("resultado"));
		
		mockMvc.perform(get(new URI("/")))
		.andExpect(status().isOk()).andExpect(model().attributeExists("resultado"));
	}

}
